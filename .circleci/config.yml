version: 2
jobs:
  build:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install dependencies from NPM
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run TSLint check
          command: npm run tslint:check
      - run:
          name: Run TSLint
          command: npm run tslint
      - run:
          name: Show prettier diff
          command: npm run prettier:show
      - run:
          name: Run build
          command: npm run build
      - run:
          name: Add Coveralls token
          command: echo "${COVERALLS_REPO_TOKEN}" >> .coveralls.yml
      - run:
          name: Run test and coverage
          command: npm run coverage

  create_docker_image:
    working_directory: ~/docker-image
    machine: true
    steps:
      - checkout
      - run:
          name: Docker login
          command: docker login -u ${JFROG_USER} -p ${JFROG_PASS} ${JFROG_DOCKER_REPO}
      - run:
          name: Set docker image to workspace
          command: mkdir -p workspace && echo "${JFROG_DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME}" > workspace/docker-image
      - run:
          name: Show docker image
          command: cat workspace/docker-image
      - run:
          name: Docker create image
          command: docker build --build-arg GIT_COMMIT=${CIRCLE_SHA1} --build-arg BUILD_NUM=${CIRCLE_BUILD_NUM} --build-arg BUILD_AUTHOR=${CIRCLE_USERNAME} -t $(cat workspace/docker-image):${CIRCLE_TAG:1} .
      - run:
          name: Docker push
          command: docker push $(cat workspace/docker-image)

  deploy_helm_chart:
    docker:
      - image: lachlanevenson/k8s-helm:latest
    working_directory: ~/helm
    steps:
      - checkout
      - run:
          name: Init Helm
          command: helm init --client-only
      - run:
          name: Set Helm Chart version
          command: sed -i -e "s/\${HELM_VERSION}/${CIRCLE_TAG:1}/g" .helm/aldo/Chart.yaml
      - run:
          name: Show Chart.yaml
          command: cat .helm/aldo/Chart.yaml
      - run:
          name: Package Helm Chart
          command: mkdir .helm/dist && helm package .helm/aldo/ -d .helm/dist/
      - run:
          name: Deploy Helm Chart
          command: curl -u ${JFROG_USER}:${JFROG_PASS} -T .helm/dist/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_TAG:1}.tgz "${JFROG_HELM_REPO}/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_TAG:1}.tgz"

workflows:
  version: 2
  build:
    jobs:
      - build:
          context: apitree-aldo-context
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
            branches:
              only:
                - dev
      - create_docker_image:
          context: apitree-aldo-context
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
            branches:
              ignore: /.*/
      - deploy_helm_chart:
          context: apitree-aldo-context
          requires:
            - create_docker_image
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
            branches:
              ignore: /.*/
